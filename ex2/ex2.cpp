#include "ex2.h"
#include <stdio.h>
#include <ctype.h>
#include <string.h>

int isUpperCaseWordCString(const char* str, int start, int end) {
    for (int i = start; i <= end; i++) {
        if (!isupper(str[i])) {
            return 0;
        }
    }
    return 1;
}

void replaceWithXOCString(char* str, int start, int end) {
    int length = end - start + 1;
    for (int i = start; i <= end; i++) {
        if ((i - start) % 2 == 0) {
            str[i] = 'X';
        }
        else {
            str[i] = 'O';
        }
    }
}

void processCString(char* str) {
    int length = strlen(str);
    int start = -1;

    for (int i = 0; i <= length; i++) {
        if (i < length && isalpha(str[i])) {
            if (start == -1) {
                start = i;
            }
        }
        else {
            if (start != -1) {
                int end = i - 1;
                if (isUpperCaseWordCString(str, start, end)) {
                    replaceWithXOCString(str, start, end);
                }
                start = -1;
            }
        }
    }
}

int main() {
    char str[MAX_LENGTH];

    printf("Vvedite stroku:\n");
    fgets(str, MAX_LENGTH, stdin);

    size_t len = strlen(str);
    if (len > 0 && str[len - 1] == '\n') {
        str[len - 1] = '\0';
    }

    printf("Ishodnaya stroka: %s\n", str);

    processCString(str);

    printf("Obrabotannaya stroka: %s\n", str);

    return 0;
}
















/*Лабораторная работа №1

Тема: Обработка строки символов различными способами хранения

Цель: Изучить различные способы хранения и обработки строк символов в языке C/C++. Овладеть навыками работы с массивами символов, строками Cи, а также обработки данных, хранящихся в файле.

Задание: Написать три программы для обработки строки символов в соответствии с индивидуальным заданием (выдается на л/р), используя следующие способы хранения:
1. Строка как массив символов.
- Строка хранится в виде одномерного массива символов (char[]).
- Выполните обработку строки, используя только исходный массив. Дополнительные массивы вводить нельзя.
2. Строка как строка в стиле языка Си (строка, завершающаяся символом '\0').
- Строка хранится в виде Cи-строки, которая завершается нулевым символом ('\0').
- Выполните обработку строки, не используя дополнительных массивов.
3. Строка хранится в файле.
- Строка записана в файл 1.
- Программа должна считать строку из файла, обработать ее по первому или второму варианту, и записать результат в файл 2.
- Использование дополнительных массивов запрещено.

Требования к выполнению задания:
- Все операции производить исключительно с исходным массивом или строкой.
- В каждой программе предусмотреть ввод строки пользователем (для вариантов 1 и 2), либо чтение строки из файла (для варианта 3).
- После выполнения обработки в варианте 3 результат должен быть записан в файл.

Ожидаемые результаты:
- В результате выполнения работы должны быть созданы три программы, демонстрирующие разные способы работы со строками символов.
- В третьем варианте должна быть реализована работа с файлами на уровне ввода/вывода данных.

Дополнительные указания:
- Для чтения и записи файлов используйте стандартные функции языка C/C++ (fopen(), fgets(), fputs(), fclose()).
- Обработку строки выберите сами (например, инвертирование строки, удаление определенных символов, замена символов и т.д.).

Критерии оценки:
- Корректность выполнения каждой из программ.
- Отсутствие использования дополнительных массивов для обработки строки.
- Соответствие структуры программы стандартам написания на языке C/C++.

Решение Л/Р загружаете на GitHub (не забудьте добавить .gitignore файл, чтобы избежать загрузки ненужных файлов).

Задание:
Найти все слова, состоящие только из заглавных букв, и заменить их на последовательность из «X» и «O» (по количеству букв в слове).*/